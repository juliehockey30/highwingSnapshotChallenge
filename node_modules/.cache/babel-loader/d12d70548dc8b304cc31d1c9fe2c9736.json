{"ast":null,"code":"var _jsxFileName = \"/Users/julieneuburger/Desktop/highwingSnapshotChallenge/src/components/bodySection/BodySection.js\";\nimport React, { Component, Fragment } from 'react';\nimport DonutChart from 'react-donut-chart';\nimport { ToggleBar, ToggleItem, BodyWrapper, FilterWrapper, FilterButton, SectionWrapper, GroupWrapper, CategoryTitle, ChartWrapper, VisualWrapper, LedgendWrapper, LedgendItem } from './BodySection.styled.js';\n\nclass BodySection extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentView: 'snapshot',\n      showPremiumRange: true,\n      showMarkets: false,\n      showIndustries: true,\n      showProducts: false\n    };\n    this.setCurrentView = this.setCurrentView.bind(this);\n    this.premiumRangeOnClick = this.premiumRangeOnClick.bind(this);\n    this.marketsOnClick = this.marketsOnClick.bind(this);\n    this.industriesOnClick = this.industriesOnClick.bind(this);\n    this.productsOnClick = this.productsOnClick.bind(this);\n    this.renderSection = this.renderSection.bind(this);\n  }\n\n  setCurrentView(view) {\n    this.setState({\n      currentView: view\n    });\n  }\n\n  premiumRangeOnClick() {\n    const previousState = this.state.showPremiumRange;\n    this.setState({\n      showPremiumRange: !previousState\n    });\n  }\n\n  marketsOnClick() {\n    const previousState = this.state.showMarkets;\n    this.setState({\n      showMarkets: !previousState\n    });\n  }\n\n  industriesOnClick() {\n    const previousState = this.state.showIndustries;\n    this.setState({\n      showIndustries: !previousState\n    });\n  }\n\n  productsOnClick() {\n    const previousState = this.state.showProducts;\n    this.setState({\n      showProducts: !previousState\n    });\n  }\n\n  renderSection(category) {\n    const data = [{\n      value: 25\n    }, {\n      label: \"two\",\n      value: 25\n    }, {\n      label: \"three\",\n      value: 25\n    }, {\n      label: \"four\",\n      value: 25\n    }];\n    return React.createElement(SectionWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(GroupWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(CategoryTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, category), React.createElement(ChartWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(LedgendWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"One\"), React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Two\"), React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Three\"), React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Four\")), React.createElement(VisualWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(DonutChart, {\n      data: data,\n      width: 150,\n      height: 150,\n      colors: ['#013d40', '#006567', '#008f91', '#00afb1', '#02c7b0', '#607d8b', '#30a200', '#00ce5f', '#00e833', '#01ff39#'],\n      legend: false,\n      clickToggle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })))), React.createElement(GroupWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(CategoryTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, category), React.createElement(ChartWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(LedgendWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"One\"), React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Two\"), React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Three\"), React.createElement(LedgendItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Four\")), React.createElement(VisualWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(DonutChart, {\n      data: data,\n      width: 150,\n      height: 150,\n      colors: ['#02c7b0', '#607d8b', '#30a200', '#013d40', '#006567', '#008f91', '#00afb1', '#00ce5f', '#00e833', '#01ff39#'],\n      legend: false,\n      clickToggle: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })))));\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(ToggleBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(ToggleItem, {\n      onClick: () => this.setCurrentView('snapshot'),\n      selected: this.state.currentView === 'snapshot',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"SNAPSHOT\"), React.createElement(ToggleItem, {\n      onClick: () => this.setCurrentView('trends'),\n      selected: this.state.currentView === 'trends',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"TRENDS\")), this.state.currentView === 'trends' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Sorry Come Back Soon!\") : React.createElement(BodyWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(FilterWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(FilterButton, {\n      selected: this.state.showPremiumRange,\n      onClick: this.premiumRangeOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Premium Range\"), React.createElement(FilterButton, {\n      selected: this.state.showMarkets,\n      onClick: this.marketsOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Markets\"), React.createElement(FilterButton, {\n      selected: this.state.showIndustries,\n      onClick: this.industriesOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Induestries\"), React.createElement(FilterButton, {\n      selected: this.state.showProducts,\n      onClick: this.productsOnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Products\")), this.state.showPremiumRange ? this.renderSection('Premium Range') : null, this.state.showMarkets ? this.renderSection('Markets') : null, this.state.showIndustries ? this.renderSection('Industries') : null, this.state.showProducts ? this.renderSection('Products') : null));\n  }\n\n}\n\nexport default BodySection;","map":{"version":3,"sources":["/Users/julieneuburger/Desktop/highwingSnapshotChallenge/src/components/bodySection/BodySection.js"],"names":["React","Component","Fragment","DonutChart","ToggleBar","ToggleItem","BodyWrapper","FilterWrapper","FilterButton","SectionWrapper","GroupWrapper","CategoryTitle","ChartWrapper","VisualWrapper","LedgendWrapper","LedgendItem","BodySection","constructor","props","state","currentView","showPremiumRange","showMarkets","showIndustries","showProducts","setCurrentView","bind","premiumRangeOnClick","marketsOnClick","industriesOnClick","productsOnClick","renderSection","view","setState","previousState","category","data","value","label","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,cANF,EAOEC,YAPF,EAQEC,aARF,EASEC,YATF,EAUEC,aAVF,EAWEC,cAXF,EAYEC,WAZF,QAaO,yBAbP;;AAeA,MAAMC,WAAN,SAA0Bf,SAA1B,CAAoC;AAClCgB,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,WAAW,EAAE,UADJ;AAETC,MAAAA,gBAAgB,EAAE,IAFT;AAGTC,MAAAA,WAAW,EAAE,KAHJ;AAITC,MAAAA,cAAc,EAAE,IAJP;AAKTC,MAAAA,YAAY,EAAE;AALL,KAAX;AAQA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKI,eAAL,GAAuB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKK,aAAL,GAAqB,KAAKA,aAAL,CAAmBL,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAEDD,EAAAA,cAAc,CAACO,IAAD,EAAO;AACnB,SAAKC,QAAL,CAAc;AAACb,MAAAA,WAAW,EAAEY;AAAd,KAAd;AACD;;AAEDL,EAAAA,mBAAmB,GAAG;AACpB,UAAMO,aAAa,GAAG,KAAKf,KAAL,CAAWE,gBAAjC;AACA,SAAKY,QAAL,CAAc;AAAEZ,MAAAA,gBAAgB,EAAE,CAACa;AAArB,KAAd;AACD;;AAEDN,EAAAA,cAAc,GAAG;AACf,UAAMM,aAAa,GAAG,KAAKf,KAAL,CAAWG,WAAjC;AACA,SAAKW,QAAL,CAAc;AAAEX,MAAAA,WAAW,EAAE,CAACY;AAAhB,KAAd;AACD;;AAEDL,EAAAA,iBAAiB,GAAG;AAClB,UAAMK,aAAa,GAAG,KAAKf,KAAL,CAAWI,cAAjC;AACA,SAAKU,QAAL,CAAc;AAAEV,MAAAA,cAAc,EAAE,CAACW;AAAnB,KAAd;AACD;;AAEDJ,EAAAA,eAAe,GAAG;AAChB,UAAMI,aAAa,GAAG,KAAKf,KAAL,CAAWK,YAAjC;AACA,SAAKS,QAAL,CAAc;AAAET,MAAAA,YAAY,EAAE,CAACU;AAAjB,KAAd;AACD;;AAEDH,EAAAA,aAAa,CAACI,QAAD,EAAW;AACtB,UAAMC,IAAI,GAAG,CAAC;AACZC,MAAAA,KAAK,EAAE;AADK,KAAD,EAGb;AACEC,MAAAA,KAAK,EAAE,KADT;AAEED,MAAAA,KAAK,EAAE;AAFT,KAHa,EAOb;AACEC,MAAAA,KAAK,EAAE,OADT;AAEED,MAAAA,KAAK,EAAE;AAFT,KAPa,EAWb;AACEC,MAAAA,KAAK,EAAE,MADT;AAEED,MAAAA,KAAK,EAAE;AAFT,KAXa,CAAb;AAgBA,WACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBF,QAAhB,CADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,MAAM,EAAE,GAHV;AAIE,MAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,UAApG,CAJV;AAKE,MAAA,MAAM,EAAE,KALV;AAME,MAAA,WAAW,EAAE,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CAFF,CADF,EAsBE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgBD,QAAhB,CADF,EAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,KAAK,EAAE,GAFT;AAGE,MAAA,MAAM,EAAE,GAHV;AAIE,MAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,EAAmE,SAAnE,EAA8E,SAA9E,EAAyF,SAAzF,EAAoG,UAApG,CAJV;AAKE,MAAA,MAAM,EAAE,KALV;AAME,MAAA,WAAW,EAAE,KANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CAFF,CAtBF,CADF;AA8CD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKd,cAAL,CAAoB,UAApB,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,WAAX,KAA2B,UAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAKE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKK,cAAL,CAAoB,QAApB,CADjB;AAEE,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,WAAX,KAA2B,QAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,CADF,EAWG,KAAKD,KAAL,CAAWC,WAAX,KAA2B,QAA3B,GAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAtC,GACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACA,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,gBADrB;AAEA,MAAA,OAAO,EAAE,KAAKM,mBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAKE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWG,WADvB;AAEE,MAAA,OAAO,EAAE,KAAKM,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EASE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWI,cADvB;AAEE,MAAA,OAAO,EAAE,KAAKM,iBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,EAaE,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWK,YADvB;AAEE,MAAA,OAAO,EAAE,KAAKM,eAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADF,EAmBG,KAAKX,KAAL,CAAWE,gBAAX,GAA8B,KAAKU,aAAL,CAAmB,eAAnB,CAA9B,GAAoE,IAnBvE,EAoBG,KAAKZ,KAAL,CAAWG,WAAX,GAAyB,KAAKS,aAAL,CAAmB,SAAnB,CAAzB,GAAyD,IApB5D,EAqBG,KAAKZ,KAAL,CAAWI,cAAX,GAA4B,KAAKQ,aAAL,CAAmB,YAAnB,CAA5B,GAA+D,IArBlE,EAsBG,KAAKZ,KAAL,CAAWK,YAAX,GAA0B,KAAKO,aAAL,CAAmB,UAAnB,CAA1B,GAA2D,IAtB9D,CAZJ,CADF;AAwCD;;AArJiC;;AAwJpC,eAAef,WAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport DonutChart from 'react-donut-chart';\nimport {\n  ToggleBar,\n  ToggleItem,\n  BodyWrapper,\n  FilterWrapper,\n  FilterButton,\n  SectionWrapper,\n  GroupWrapper,\n  CategoryTitle,\n  ChartWrapper,\n  VisualWrapper,\n  LedgendWrapper,\n  LedgendItem,\n} from './BodySection.styled.js';\n\nclass BodySection extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      currentView: 'snapshot',\n      showPremiumRange: true,\n      showMarkets: false,\n      showIndustries: true,\n      showProducts: false,\n    };\n\n    this.setCurrentView = this.setCurrentView.bind(this);\n    this.premiumRangeOnClick = this.premiumRangeOnClick.bind(this);\n    this.marketsOnClick = this.marketsOnClick.bind(this);\n    this.industriesOnClick = this.industriesOnClick.bind(this);\n    this.productsOnClick = this.productsOnClick.bind(this);\n    this.renderSection = this.renderSection.bind(this);\n  }\n\n  setCurrentView(view) {\n    this.setState({currentView: view})\n  }\n\n  premiumRangeOnClick() {\n    const previousState = this.state.showPremiumRange;\n    this.setState({ showPremiumRange: !previousState });\n  }\n\n  marketsOnClick() {\n    const previousState = this.state.showMarkets;\n    this.setState({ showMarkets: !previousState });\n  }\n\n  industriesOnClick() {\n    const previousState = this.state.showIndustries;\n    this.setState({ showIndustries: !previousState });\n  }\n\n  productsOnClick() {\n    const previousState = this.state.showProducts;\n    this.setState({ showProducts: !previousState });\n  }\n\n  renderSection(category) {\n    const data = [{\n      value: 25\n    },\n    {\n      label: \"two\",\n      value: 25,\n    },\n    {\n      label: \"three\",\n      value: 25\n    },\n    {\n      label: \"four\",\n      value: 25,\n    }];\n\n    return(\n      <SectionWrapper>\n        <GroupWrapper>\n          <CategoryTitle>{category}</CategoryTitle>\n          <ChartWrapper>\n            <LedgendWrapper>\n              <LedgendItem>One</LedgendItem>\n              <LedgendItem>Two</LedgendItem>\n              <LedgendItem>Three</LedgendItem>\n              <LedgendItem>Four</LedgendItem>\n            </LedgendWrapper>\n            <VisualWrapper>\n              <DonutChart\n                data={data}\n                width={150}\n                height={150}\n                colors={['#013d40', '#006567', '#008f91', '#00afb1', '#02c7b0', '#607d8b', '#30a200', '#00ce5f', '#00e833', '#01ff39#' ]}\n                legend={false}\n                clickToggle={false}\n              />\n            </VisualWrapper>\n          </ChartWrapper>\n        </GroupWrapper>\n        <GroupWrapper>\n          <CategoryTitle>{category}</CategoryTitle>\n          <ChartWrapper>\n            <LedgendWrapper>\n              <LedgendItem>One</LedgendItem>\n              <LedgendItem>Two</LedgendItem>\n              <LedgendItem>Three</LedgendItem>\n              <LedgendItem>Four</LedgendItem>\n            </LedgendWrapper>\n            <VisualWrapper>\n              <DonutChart\n                data={data}\n                width={150}\n                height={150}\n                colors={['#02c7b0', '#607d8b', '#30a200', '#013d40', '#006567', '#008f91', '#00afb1', '#00ce5f', '#00e833', '#01ff39#' ]}\n                legend={false}\n                clickToggle={false}\n              />\n            </VisualWrapper>\n          </ChartWrapper>\n        </GroupWrapper>\n      </SectionWrapper>\n    )\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <ToggleBar>\n          <ToggleItem\n            onClick={() => this.setCurrentView('snapshot')}\n            selected={this.state.currentView === 'snapshot'}\n          >SNAPSHOT</ToggleItem>\n          <ToggleItem\n            onClick={() => this.setCurrentView('trends')}\n            selected={this.state.currentView === 'trends'}\n          >TRENDS</ToggleItem>\n        </ToggleBar>\n        {this.state.currentView === 'trends' ? <div>Sorry Come Back Soon!</div> :\n          <BodyWrapper>\n            <FilterWrapper>\n              <FilterButton\n              selected={this.state.showPremiumRange}\n              onClick={this.premiumRangeOnClick}\n              >Premium Range</FilterButton>\n              <FilterButton\n                selected={this.state.showMarkets}\n                onClick={this.marketsOnClick}\n              >Markets</FilterButton>\n              <FilterButton\n                selected={this.state.showIndustries}\n                onClick={this.industriesOnClick}\n              >Induestries</FilterButton>\n              <FilterButton\n                selected={this.state.showProducts}\n                onClick={this.productsOnClick}\n              >Products</FilterButton>\n            </FilterWrapper>\n            {this.state.showPremiumRange ? this.renderSection('Premium Range') : null}\n            {this.state.showMarkets ? this.renderSection('Markets') : null}\n            {this.state.showIndustries ? this.renderSection('Industries') : null}\n            {this.state.showProducts ? this.renderSection('Products') : null}\n          </BodyWrapper>\n        }\n      </Fragment>\n    );\n  }\n}\n\nexport default BodySection;\n"]},"metadata":{},"sourceType":"module"}